# Set up LAPP stack for Drupal (Linux, Apache, PostgreSQL, php)
classes:
  - role_base::server_drupal_lapp


# Apache
role_apache::vhosts_hash:
  drupal_443:
    servername: 'broekhuizen.online'
    port: '443'
    ssl: true
    directoryindex: 'index.php'
    docroot: '/var/www/drupal'
    docroot_owner: 'www-data'
    docroot_group: 'www-data'
    override: 'ALL'
    priority: '5'
    serveraliases:
      - '*.broekhuizen.online'
    virtual_docroot: '/var/www/drupal'
  drupal_80:
    servername: 'broekhuizen.online'
    port: '80'
    directoryindex: 'index.php'
    docroot: '/var/www/drupal'
    docroot_owner: 'www-data'
    docroot_group: 'www-data'
    override: 'ALL'
    priority: '10'
    serveraliases:
      - '*.broekhuizen.online'
    virtual_docroot: '/var/www/drupal'
    #redirect_source: '/'
    #redirect_dest: 'https://broekhuizen.online'
    #redirect_status: 'permanent'


# PostgreSQL
role_postgresql::listen_address: '*'

# PostgreSQL databases
role_postgresql::db_hash:
  drupaldb:
    user: 'drupal_user'
    password: 'password'

# PostgreSQL roles
role_postgresql::role_hash:
  drupal:
    user: 'drupal_user'
    password: 'password'
  analytics:
    user: 'analytics'
    password: 'password'
    superuser: true

# PostGreSQL grants
role_postgresql::grant_hash:
  drupal:
    privilege: 'ALL'
    db: 'drupaldb'
    role: 'drupal'
  analytics:
    privilege: 'CONNECT'
    db: 'drupaldb'
    role: 'analytics'

# PostgreSQL remote connections
role_postgresql::pg_hba_rule_hash:
  all:
    description: 'Allow all'
    type: 'host'
    database: 'drupaldb'
    user: 'drupal_user'
    address: '0.0.0.0/0'
    auth_method: 'md5'

# PostgreSQL postgresql.conf
role_postgresql::config_values:
  logging_collector: 'on'
  log_min_duration_statement: '0' #-1
  log_min_messages: 'DEBUG5'
  log_rotation_age: '1d'
  log_rotation_size: '1GB'
  log_directory: '/var/log/postgresql'
  log_line_prefix: 'start_prefix{"log_time":"%m","application_name":"%a","user_name":"%u","database_name":"%d","remote_host":"%r","process_id":"%p","command_tag":"%i","sql_state":"%e","session_id":"%c","session_line_number":%l,"virtual_transaction_id":"%v","session_id":"%c"}end_prefix log_line: '

# Pgbouncer
pgbouncer::user:
  'postgres'
pgbouncer::group:
  'postgres'
pgbouncer::databases:
  - source_db: 'drupaldb'
    host: 'localhost'
    dest_db: 'drupaldb'
    auth_user: 'drupal_user'
pgbouncer::userlist:
  - user: 'drupal_user'
    password: 'password'

# Php settings
role_php::settings:
  PHP/max_execution_time: '90'
  PHP/max_input_time: '300'
  PHP/memory_limit: '128M'
  PHP/post_max_size: '32M'
  PHP/upload_max_filesize: '32M'
  PHP/allow_url_fopen: 'On'  # On for Drush
  Date/date.timezone: 'Europe/Berlin'
role_php::extensions:
  gd:
    package_prefix: 'php7.0-'
  pgsql:
    package_prefix: 'php7.0-'
role_php::globals:
  php_version: '7.0'
  config_root: '/etc/php/7.0'

drush:
  drush8:
    version: '8'
    link_name: '/usr/local/bin/drush8'


# Letsencrypt
role_apache::letsencrypt_config:
  email: 'rudi.broekhuizen@naturalis.nl'
  server: 'https://acme-staging.api.letsencrypt.org/directory'


# Filebeat, overrides for https://github.com/pcfens/puppet-filebeat, filebeat will send json lines and set keys at root level
filebeat::prospectors:
  syslog:
    paths:
      - '/var/log/postgresql/*.log'
    doc_type: 'pg_log'
  pg_stat_activity:
    paths:
      - '/var/log/postgresql/pg_stat_activity.json'
    doc_type: 'pg_stat_activity'
    json:
      keys_under_root: true
  pg_stat_statements:
    paths:
      - '/var/log/postgresql/pg_stat_statements.json'
    doc_type: 'pg_stat_statements'
    json:
      keys_under_root: true
  pg_stat_database:
    paths:
      - '/var/log/postgresql/pg_stat_database.json'
    doc_type: 'pg_stat_database'
    json:
      keys_under_root: true
  pg_stat_all_tables:
    paths:
      - '/var/log/postgresql/pg_stat_all_tables.json'
    doc_type: 'pg_stat_all_tables'
    json:
      keys_under_root: true
      
filebeat::outputs:
  logstash:
    hosts:
      - 'logstash:5044'

# Logstash
role_logstash::configfile:
  logstash-filebeat-psql.conf

# Analytics
role_cron::cron_job_hash:

  pg_stat_database:
    minute: '*/1'
    command: "psql postgresql://analytics:password@localhost/postgres -f /opt/postgresql/pg_stat_database.sql | head -n-2 | tail -n+3 | jq -c . >> /var/log/postgresql/pg_stat_database.json"

  pg_stat_statements:
    minute: '*/1'
    command: "psql postgresql://analytics:password@localhost/postgres -f /opt/postgresql/pg_stat_statements.sql | head -n-2 | tail -n+3 | jq -c . >> /var/log/postgresql/pg_stat_statements.json"

  pg_stat_all_tables:
    minute: '*/1'
    command: "psql postgresql://analytics:password@localhost/postgres -f /opt/postgresql/pg_stat_all_tables.sql | head -n-2 | tail -n+3 | jq -c . >> /var/log/postgresql/pg_stat_all_tables.json"

  pg_statio_all_tables:
    minute: '*/1'
    command: "psql postgresql://analytics:password@localhost/postgres -f /opt/postgresql/pg_statio_all_tables.sql | head -n-2 | tail -n+3 | jq -c . >> /var/log/postgresql/pg_statio_all_tables.json"
    
  pg_stat_activity:
    minute: "*/1"
    command: "psql postgresql://analytics:password@localhost/drupal -f /opt/postgresql/pg_stat_activity.sql | head -n-2 | tail -n+3 | jq -c . >> /var/log/postgresql/pg_stat_activity.json"


# Logrotate analytics files
misc::logrotate:
  logrotate_rule_hash:
    json:
      path: "/var/log/postgresql/*.json"
      rotate_every: hour
      rotate: '1'
      size: 500M
      su: true
      su_owner: root
      su_group: root
    plain:
      path: "/var/log/postgresql/*.plain"
      rotate_every: hour
      rotate: '1'
      size: 500M
      su: true
      su_owner: root
      su_group: root
